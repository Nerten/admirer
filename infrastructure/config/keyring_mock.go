// Code generated by MockGen. DO NOT EDIT.
// Source: keyring.go

// Package config is a generated GoMock package.
package config

import (
	reflect "reflect"

	keyring "github.com/99designs/keyring"
	gomock "github.com/golang/mock/gomock"
)

// MockKeyring is a mock of Keyring interface.
type MockKeyring struct {
	ctrl     *gomock.Controller
	recorder *MockKeyringMockRecorder
}

// MockKeyringMockRecorder is the mock recorder for MockKeyring.
type MockKeyringMockRecorder struct {
	mock *MockKeyring
}

// NewMockKeyring creates a new mock instance.
func NewMockKeyring(ctrl *gomock.Controller) *MockKeyring {
	mock := &MockKeyring{ctrl: ctrl}
	mock.recorder = &MockKeyringMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKeyring) EXPECT() *MockKeyringMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockKeyring) Get(key string) (keyring.Item, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", key)
	ret0, _ := ret[0].(keyring.Item)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockKeyringMockRecorder) Get(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockKeyring)(nil).Get), key)
}
